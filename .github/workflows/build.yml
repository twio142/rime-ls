name: Build

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: rime_ls-x86_64-unknown-linux-gnu.tar.gz
          - os: macos-13
            target: x86_64-apple-darwin
            archive: rime_ls-x86_64-apple-darwin.tar.gz
          - os: macos-15
            target: aarch64-apple-darwin
            archive: rime_ls-aarch64-apple-darwin.tar.gz
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ matrix.target }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.target }}-cargo-registry-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target/
          key: ${{ matrix.target }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.target }}-cargo-build-

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt install -y librime-dev

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install librime

      - name: Build
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            # Set librime paths for Homebrew installation
            if [[ "${{ matrix.target }}" == "aarch64-apple-darwin" ]]; then
              export LIBRIME_INCLUDE_DIR=/opt/homebrew/include
              export LIBRIME_LIB_DIR=/opt/homebrew/lib
            else
              export LIBRIME_INCLUDE_DIR=/usr/local/include
              export LIBRIME_LIB_DIR=/usr/local/lib
            fi
          fi
          cargo build --release

      - name: Archive
        run: |
          tar czvf ${{ matrix.archive }} -C target/release/ rime_ls

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive }}
          path: ${{ matrix.archive }}
